<UserControl x:Class="Dungeoneer.View.CreatureControl"
						 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
						 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
						 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
						 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
						 xmlns:view="clr-namespace:Dungeoneer.View"
						 xmlns:model="clr-namespace:Dungeoneer.Model"
						 xmlns:effect="clr-namespace:Dungeoneer.Model.Effect"
						 mc:Ignorable="d" 
						 d:DesignHeight="140" d:DesignWidth="596">
	<Border Margin="2" BorderBrush="White" BorderThickness="2" CornerRadius="4">
		<DockPanel>
			<Grid DockPanel.Dock="Bottom" Margin="0,2,0,0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<Border Grid.Column="0" Margin="1" BorderBrush="White" BorderThickness="1" CornerRadius="3">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<Label Grid.Row="0" Content="Attacks" HorizontalContentAlignment="Center"
									 FontWeight="Bold"/>
						<TreeView Grid.Row="1" Background="Transparent" ItemsSource="{Binding AttackSets}" BorderThickness="0">
							<TreeView.Resources>
								<HierarchicalDataTemplate DataType="{x:Type model:AttackSet}" ItemsSource="{Binding Attacks}">
									<StackPanel Orientation="Horizontal">
										<TextBlock Text="{Binding Name}"/>
										<TextBlock Text=" ["/>
										<TextBlock Text="{Binding Attacks.Count}"/>
										<TextBlock Text="]"/>
										<!-- How about a button to roll an attack and display the results? -->
									</StackPanel>
								</HierarchicalDataTemplate>
								<HierarchicalDataTemplate DataType="{x:Type model:Attack}">
									<TextBlock Text="{Binding AsString}"/>
								</HierarchicalDataTemplate>
							</TreeView.Resources>
							<TreeView.ItemContainerStyle>
								<Style>
									<Setter Property="TreeViewItem.IsExpanded" Value="True"/>
								</Style>
							</TreeView.ItemContainerStyle>
						</TreeView>
					</Grid>
				</Border>
				<Border Grid.Column="1" Margin="1" BorderBrush="White" BorderThickness="1" CornerRadius="3">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Content="Effects" HorizontalContentAlignment="Center"
									 FontWeight="Bold"/>
						<ScrollViewer Grid.Row="1" Grid.Column="0" VerticalScrollBarVisibility="Auto">
							<ListBox ItemsSource="{Binding Effects}" SelectedIndex="{Binding SelectedEffect}" 
										 Background="Transparent" BorderThickness="0" MinWidth="60">
								<ListBox.Resources>
									<DataTemplate DataType="{x:Type effect:Effect}">
										<WrapPanel>
											<TextBlock Text="{Binding}" FontWeight="Bold" Background="Transparent"/>
										</WrapPanel>
									</DataTemplate>
									<DataTemplate DataType="{x:Type effect:TimedEffect}">
										<WrapPanel>
											<TextBlock Text="{Binding}" FontWeight="Bold" Background="Transparent"/>
											<TextBlock Text=" (" Background="Transparent"/>
											<TextBlock Text="{Binding RemainingDuration}" Background="Transparent"/>
											<TextBlock Text=")" Background="Transparent"/>
										</WrapPanel>
									</DataTemplate>
								</ListBox.Resources>
							</ListBox>
						</ScrollViewer>
						<StackPanel Grid.Row="1" Grid.Column="1">
							<Button Command="{Binding AddEffect}" ToolTip="Add Effect" Content="Add" Margin="2" Height="20" 
									Width="55" FontWeight="Bold"/>
							<Button Command="{Binding RemoveEffect}" ToolTip="Remove Effect" Content="Remove" Margin="2" 
									Height="20" Width="55" FontWeight="Bold"/>
						</StackPanel>
					</Grid>
				</Border>
				<Border Grid.Column="2" Margin="1" BorderBrush="White" BorderThickness="1" CornerRadius="3">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Content="Hit Points" HorizontalContentAlignment="Center"
									 FontWeight="Bold"/>
						<ScrollViewer Grid.Row="1" Grid.Column="0" VerticalScrollBarVisibility="Auto">
							<ListBox ItemsSource="{Binding HitPointChanges}" SelectedIndex="{Binding SelectedHitPointChange}" 
										 Background="Transparent" BorderThickness="0" MinWidth="60">
								<!--<ListBox.Resources>
									<DataTemplate DataType="{x:Type effect:Effect}">
										<WrapPanel>
											<TextBlock Text="{Binding}" FontWeight="Bold" Background="Transparent"/>
										</WrapPanel>
									</DataTemplate>
									<DataTemplate DataType="{x:Type effect:TimedEffect}">
										<WrapPanel>
											<TextBlock Text="{Binding}" FontWeight="Bold" Background="Transparent"/>
											<TextBlock Text=" (" Background="Transparent"/>
											<TextBlock Text="{Binding RemainingDuration}" Background="Transparent"/>
											<TextBlock Text=")" Background="Transparent"/>
										</WrapPanel>
									</DataTemplate>
								</ListBox.Resources>-->
							</ListBox>
						</ScrollViewer>
						<StackPanel Grid.Row="1" Grid.Column="1">
							<Button Command="{Binding AddHitPointChange}" ToolTip="Add Hit" Content="Add" Margin="2" Height="20" 
									Width="55" FontWeight="Bold"/>
<!--							<Button Command="{Binding EditHitPointChange}" ToolTip="Edit Hit" Content="Edit" Margin="2" Height="20" 
									Width="55" FontWeight="Bold"/>-->
							<Button Command="{Binding RemoveHitPointChange}" ToolTip="Remove Hit" Content="Remove" Margin="2" 
									Height="20" Width="55" FontWeight="Bold"/>
						</StackPanel>
					</Grid>
				</Border>
				<Grid.Style>
					<Style TargetType="{x:Type Grid}">
						<Setter Property="Visibility" Value="Collapsed"/>
						<Style.Triggers>
							<DataTrigger Binding="{Binding IsChecked, ElementName=InfoPanelToggleButton}" Value="True">
								<Setter Property="Visibility" Value="Visible"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Grid.Style>
			</Grid>
			<DockPanel DockPanel.Dock="Left">
				<Grid DockPanel.Dock="Left">
					<Grid.RowDefinitions>
						<RowDefinition Height="2*"/>
						<RowDefinition Height="1*"/>
					</Grid.RowDefinitions>
					<TextBox Name="DisplayNameTextBox" Grid.Row="0" Margin="4,2" Text="{Binding DisplayName}" FontSize="24" FontWeight="Bold" 
									 Background="Transparent" VerticalAlignment="Bottom" BorderThickness="0"/>
					<TextBlock Grid.Row="1" Text="{Binding CreatureInfo}" Margin="4,2"  FontSize="10" FontWeight="Light" 
										 TextWrapping="Wrap" VerticalAlignment="Bottom" Background="Transparent" FontStyle="Italic"
										 MaxWidth="{Binding ActualWidth, ElementName=DisplayNameTextBox}"/>
				</Grid>
				<StackPanel DockPanel.Dock="Left" Orientation="Vertical" VerticalAlignment="Center">
					<ToggleButton x:Name="InfoPanelToggleButton" Content="Info" Margin="1" FontSize="14" 
												FontWeight="Bold" IsChecked="True"/>
				</StackPanel>
				<view:ValueDisplay DockPanel.Dock="Left" Title="AC" ValueBinding="{Binding ArmorClass}" Margin="1,0"/>
				<view:ValueDisplay DockPanel.Dock="Left" Title="HP" ValueBinding="{Binding HitPoints}" Margin="1,0"/>
				<Grid DockPanel.Dock="Left">
					<Grid.Style>
						<Style TargetType="{x:Type Grid}">
							<Setter Property="Visibility" Value="Collapsed"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding HasSpellResistance}" Value="True">
									<Setter Property="Visibility" Value="Visible"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Grid.Style>
					<view:ValueDisplay Title="SR" ValueBinding="{Binding SpellResistance}" Margin="1,0"/>
				</Grid>
				<StackPanel DockPanel.Dock="Left" Orientation="Vertical">
					<StackPanel Orientation="Horizontal">
						<TextBlock Text="Str " FontWeight="Bold"/>
						<TextBlock Text="{Binding Strength}"/>
						<TextBlock Text=" Dex " FontWeight="Bold"/>
						<TextBlock Text="{Binding Dexterity}"/>
						<TextBlock Text=" Con " FontWeight="Bold"/>
						<TextBlock Text="{Binding Constitution}"/>
						<TextBlock Text=" Int " FontWeight="Bold"/>
						<TextBlock Text="{Binding Intelligence}"/>
						<TextBlock Text=" Wis " FontWeight="Bold"/>
						<TextBlock Text="{Binding Wisdom}"/>
						<TextBlock Text=" Cha " FontWeight="Bold"/>
						<TextBlock Text="{Binding Charisma}"/>
					</StackPanel>
					<StackPanel Orientation="Horizontal">
						<TextBlock Text="{Binding Size}" FontWeight="Bold"/>
						<TextBlock Text=" ("/>
						<TextBlock Text="{Binding Space}"/>
						<TextBlock Text="ft.), reach "/>
						<TextBlock Text="{Binding Reach}"/>
						<TextBlock Text="ft., "/>
						<TextBlock Text="{Binding Speed}"/>
					</StackPanel>
					<StackPanel Orientation="Horizontal">
						<TextBlock Text="Fort " FontWeight="Bold"/>
						<TextBlock Text="{Binding FortitudeSave}"/>
						<TextBlock Text=" Ref " FontWeight="Bold"/>
						<TextBlock Text="{Binding ReflexSave}"/>
						<TextBlock Text=" Will " FontWeight="Bold"/>
						<TextBlock Text="{Binding WillSave}"/>
					</StackPanel>
					<StackPanel Orientation="Horizontal">
						<TextBlock Text="Attacks of Opportunity "/>
						
					</StackPanel>
					<TextBlock Text="{Binding SpecialAttacks}" TextWrapping="Wrap"/>
					<TextBlock Text="{Binding SpecialQualities}" TextWrapping="Wrap"/>
				</StackPanel>
			</DockPanel>
		</DockPanel>
		<Border.Style>
			<Style TargetType="{x:Type Border}">
				<Setter Property="Background" Value="LightGray"/>
				<Style.Triggers>
					<DataTrigger Binding="{Binding Dead}" Value="True">
						<Setter Property="Background" Value="DarkGray"/>
					</DataTrigger>
				</Style.Triggers>
			</Style>
		</Border.Style>
	</Border>
</UserControl>
